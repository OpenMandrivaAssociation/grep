diff -up grep-3.4/configure.ac.1~ grep-3.4/configure.ac
--- grep-3.4/configure.ac.1~	2020-01-03 15:08:10.540019398 +0100
+++ grep-3.4/configure.ac	2020-01-03 15:09:26.670015705 +0100
@@ -67,6 +67,18 @@ gl_INIT
 # Note -Wvla is implicitly added by gl_MANYWARN_ALL_GCC
 AC_DEFINE([GNULIB_NO_VLA], [1], [Define to 1 to disable use of VLAs])
 
+AC_CACHE_CHECK([for gcc 7-compatible __builtin_mul_overflow_p],
+  [utils_cv_builtin_mul_overflow_p],
+  [AC_COMPILE_IFELSE(
+    [AC_LANG_PROGRAM(
+      [[]],
+      [[return __builtin_mul_overflow_p(1, 2, 3);]])],
+    [utils_cv_builtin_mul_overflow_p=yes],
+    [utils_cv_builtin_mul_overflow_p=no])])
+if test $utils_cv_builtin_mul_overflow_p = yes; then
+  AC_DEFINE([HAVE_BUILTIN_MUL_OVERFLOW_P], [1], [Define if your compiler supports __builtin_mul_overflow_p])
+fi
+
 # The test suite needs to know if we have a working perl.
 # FIXME: this is suboptimal.  Ideally, we would be able to call gl_PERL
 # with an ACTION-IF-NOT-FOUND argument ...
diff -up grep-3.4/gnulib-tests/macros.h.1~ grep-3.4/gnulib-tests/macros.h
--- grep-3.4/gnulib-tests/macros.h.1~	2020-01-01 18:12:27.000000000 +0100
+++ grep-3.4/gnulib-tests/macros.h	2020-01-03 15:08:10.540019398 +0100
@@ -22,7 +22,7 @@
 #include <stdlib.h>
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up grep-3.4/gnulib-tests/vasnprintf.c.1~ grep-3.4/gnulib-tests/vasnprintf.c
--- grep-3.4/gnulib-tests/vasnprintf.c.1~	2020-01-01 18:13:09.000000000 +0100
+++ grep-3.4/gnulib-tests/vasnprintf.c	2020-01-03 15:08:10.540019398 +0100
@@ -119,7 +119,7 @@
 #endif
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up grep-3.4/lib/dfa.c.1~ grep-3.4/lib/dfa.c
--- grep-3.4/lib/dfa.c.1~	2020-01-01 18:12:27.000000000 +0100
+++ grep-3.4/lib/dfa.c	2020-01-03 15:08:10.541019398 +0100
@@ -62,7 +62,7 @@ isasciidigit (char c)
 #include "localeinfo.h"
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up grep-3.4/lib/fnmatch.c.1~ grep-3.4/lib/fnmatch.c
--- grep-3.4/lib/fnmatch.c.1~	2020-01-01 18:13:10.000000000 +0100
+++ grep-3.4/lib/fnmatch.c	2020-01-03 15:08:10.541019398 +0100
@@ -66,7 +66,7 @@ extern int fnmatch (const char *pattern,
 #include "flexmember.h"
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up grep-3.4/lib/fts.c.1~ grep-3.4/lib/fts.c
--- grep-3.4/lib/fts.c.1~	2020-01-01 18:12:27.000000000 +0100
+++ grep-3.4/lib/fts.c	2020-01-03 15:08:10.541019398 +0100
@@ -200,7 +200,7 @@ enum Fts_stat
 #endif
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up grep-3.4/lib/intprops.h.1~ grep-3.4/lib/intprops.h
--- grep-3.4/lib/intprops.h.1~	2020-01-03 15:08:10.541019398 +0100
+++ grep-3.4/lib/intprops.h	2020-01-03 15:09:58.467014162 +0100
@@ -238,15 +238,11 @@
 # define _GL_HAS_BUILTIN_MUL_OVERFLOW _GL_HAS_BUILTIN_ADD_OVERFLOW
 #endif
 
-/* True if __builtin_add_overflow_p (A, B, C) works, and similarly for
-   __builtin_mul_overflow_p and __builtin_mul_overflow_p.  */
-#define _GL_HAS_BUILTIN_OVERFLOW_P (7 <= __GNUC__)
-
 /* The _GL*_OVERFLOW macros have the same restrictions as the
    *_RANGE_OVERFLOW macros, except that they do not assume that operands
    (e.g., A and B) have the same type as MIN and MAX.  Instead, they assume
    that the result (e.g., A + B) has that type.  */
-#if _GL_HAS_BUILTIN_OVERFLOW_P
+#if HAVE_BUILTIN_MUL_OVERFLOW_P
 # define _GL_ADD_OVERFLOW(a, b, min, max)                               \
    __builtin_add_overflow_p (a, b, (__typeof__ ((a) + (b))) 0)
 # define _GL_SUBTRACT_OVERFLOW(a, b, min, max)                          \
diff -up grep-3.4/lib/mbrtowc.c.1~ grep-3.4/lib/mbrtowc.c
--- grep-3.4/lib/mbrtowc.c.1~	2020-01-03 15:08:10.541019398 +0100
+++ grep-3.4/lib/mbrtowc.c	2020-01-03 15:10:33.834012446 +0100
@@ -38,7 +38,7 @@
 # include "glthread/lock.h"
 
 # ifndef FALLTHROUGH
-#  if __GNUC__ < 7
+#  if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #   define FALLTHROUGH ((void) 0)
 #  else
 #   define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up grep-3.4/lib/quotearg.c.1~ grep-3.4/lib/quotearg.c
--- grep-3.4/lib/quotearg.c.1~	2020-01-01 18:12:27.000000000 +0100
+++ grep-3.4/lib/quotearg.c	2020-01-03 15:08:10.541019398 +0100
@@ -55,7 +55,7 @@
 #define INT_BITS (sizeof (int) * CHAR_BIT)
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up grep-3.4/lib/unistr/u8-uctomb-aux.c.1~ grep-3.4/lib/unistr/u8-uctomb-aux.c
--- grep-3.4/lib/unistr/u8-uctomb-aux.c.1~	2020-01-01 18:13:11.000000000 +0100
+++ grep-3.4/lib/unistr/u8-uctomb-aux.c	2020-01-03 15:08:10.541019398 +0100
@@ -21,7 +21,7 @@
 #include "unistr.h"
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up grep-3.4/lib/xalloc-oversized.h.1~ grep-3.4/lib/xalloc-oversized.h
--- grep-3.4/lib/xalloc-oversized.h.1~	2020-01-01 18:12:27.000000000 +0100
+++ grep-3.4/lib/xalloc-oversized.h	2020-01-03 15:08:10.541019398 +0100
@@ -41,7 +41,7 @@ typedef size_t __xalloc_count_type;
    positive and N must be nonnegative.  This is a macro, not a
    function, so that it works correctly even when SIZE_MAX < N.  */
 
-#if 7 <= __GNUC__
+#ifdef HAVE_BUILTIN_MUL_OVERFLOW_P
 # define xalloc_oversized(n, s) \
    __builtin_mul_overflow_p (n, s, (__xalloc_count_type) 1)
 #elif 5 <= __GNUC__ && !defined __ICC && !__STRICT_ANSI__
diff -up grep-3.4/src/system.h.1~ grep-3.4/src/system.h
--- grep-3.4/src/system.h.1~	2020-01-01 18:12:21.000000000 +0100
+++ grep-3.4/src/system.h	2020-01-03 15:08:10.541019398 +0100
@@ -108,7 +108,7 @@ __asan_unpoison_memory_region (void cons
 #endif
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
